// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL;

namespace Project.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Project.Core.Models.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Credits")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("Project.Core.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Properties");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Property");
                });

            modelBuilder.Entity("Project.Core.Models.Apartment", b =>
                {
                    b.HasBaseType("Project.Core.Models.Property");

                    b.Property<int>("NbOfRooms")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Apartment");
                });

            modelBuilder.Entity("Project.Core.Models.Land", b =>
                {
                    b.HasBaseType("Project.Core.Models.Property");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<bool>("CanBeFarmed")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Land");
                });

            modelBuilder.Entity("Project.Core.Models.Shop", b =>
                {
                    b.HasBaseType("Project.Core.Models.Property");

                    b.Property<int>("Area")
                        .HasColumnType("int")
                        .HasColumnName("Shop_Area");

                    b.Property<int>("Business")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Shop");
                });

            modelBuilder.Entity("Project.Core.Models.Property", b =>
                {
                    b.HasOne("Project.Core.Models.Buyer", null)
                        .WithMany("Properties")
                        .HasForeignKey("BuyerId");
                });

            modelBuilder.Entity("Project.Core.Models.Buyer", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
